#! /bin/bash
# $1 = doc-sle repo clone dir

# don't start this script from symlinks!
mydir=$(dirname "$0")

guides="\
  DC-opensuse-autoyast \
  DC-opensuse-gnome-user \
  DC-opensuse-reference \
  DC-opensuse-security \
  DC-opensuse-startup \
  DC-opensuse-tuning \
  DC-opensuse-virtualization\
  "

version="15.4"


[[ ! -d "$1" ]] && { echo "First argument must be your doc-sle repo clone dir."; exit 1; }

[[ ! -f "$mydir/publishusers" ]] && { echo "Sync config file 'publishusers' is missing."; exit 1; }
# shellcheck source=publishusers
. "$mydir/publishusers"

cd "$1" || { echo "Could not find clone directory \"$1\"."; exit 1; }

echo -n "Went to $1, will now delete \"$1/build\" and \"$1/$version\" and then start to build. Continue? "
# shellcheck disable=SC2162,SC2034
read -r foo
rm -rf -- "build" "$version"

for dc in $guides; do
  echo "Building $dc"
  daps -d "$dc" validate
  [[ -p $? ]] && { echo "-> Failed to build validate. Exiting"; exit 2; }
  missing_images=$(daps -d "$dc" list-images-missing)
  # shellcheck disable=SC2028
  [[ -p "$missing_images" ]] && { echo "Missing images:\n$missing_images"; exit 2; }
  daps -d "$dc" html
  [[ -p $? ]] && { echo "-> Failed to build HTML. Exiting"; exit 2; }
  daps -d "$dc" html --single
  [[ -p $? ]] && { echo "-> Failed to build Single-HTML. Exiting"; exit 2; }
  daps -d "$dc" pdf
  [[ -p $? ]] && { echo "-> Failed to build PDF. Exiting"; exit 2; }
  daps -d "$dc" epub
  [[ -p $? ]] && { echo "-> Failed to build EPUB. Exiting"; exit 2; }
done

mv build "$version"

(
  cd "$version" || { echo "Could not find \"$version\" build directory. Something went awry."; exit 1; }
  for d in *; do
    [[ ! -d "$d" ]] && continue
    # shellcheck disable=SC2046
    echo "mv $d "$(echo "$d" | sed -r 's/^opensuse-//')
    # shellcheck disable=SC2046
    mv "$d" $(echo "$d" | sed -r 's/^opensuse-//')
  done
  rm -rf -- */log */DC-* .images .profiled .tmp
  ls -a
)

echo -n "Will now rsync to doc.o.o. Continue (^C to cancel, Enter to continue)? "
# shellcheck disable=SC2162,SC2034
read foo

target_dir="doc.opensuse.org/htdocs/documentation/leap/archive/$version"

ssh -p"$port" "${userdoc}@${server}" "mkdir -p $target_dir"

rsync -v -lr --compress -e 'ssh -p '"$port" \
    "$version"/ \
    "${userdoc}@${server}:${target_dir}"
